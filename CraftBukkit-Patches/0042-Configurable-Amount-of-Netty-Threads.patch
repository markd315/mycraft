From 98f3659fa74d4ca72ada8fd847c2f8a3606767c0 Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Fri, 13 Dec 2013 11:58:58 +1100
Subject: [PATCH] Configurable Amount of Netty Threads

This brings back the option that the Spigot version of netty saw. By default Netty will try and use cores*2 threads, however if running multiple servers on the same machine, this can be too many threads. Additionally some people have 16 core servers. If 32 Netty threads are allowed in this setup, then the lock contention, and thus blocking between threads becomes much greater, leading to decreased performance.

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index af93b811c..e1732045e 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -73,7 +73,7 @@ public abstract class MinecraftServer implements IAsyncTaskHandler, IMojangStati
     public File universe;
     private final List<ITickable> l = Lists.newArrayList();
     public final MethodProfiler methodProfiler = new MethodProfiler();
-    private final ServerConnection m;
+    private ServerConnection m; // Spigot
     private final ServerPing n = new ServerPing();
     private final Random o = new Random();
     public final DataFixer dataConverterManager;
@@ -165,7 +165,7 @@ public abstract class MinecraftServer implements IAsyncTaskHandler, IMojangStati
         this.W = gameprofilerepository;
         this.X = usercache;
         // this.universe = file; // CraftBukkit
-        this.m = new ServerConnection(this); // CraftBukkit
+        // this.m = new ServerConnection(this); // CraftBukkit // Spigot
         // this.convertable = file == null ? null : new WorldLoaderServer(file.toPath(), file.toPath().resolve("../backups"), datafixer); // CraftBukkit - moved to DedicatedServer.init
         this.dataConverterManager = datafixer;
         this.ac.a((IResourcePackListener) this.ah);
@@ -1421,7 +1421,7 @@ public abstract class MinecraftServer implements IAsyncTaskHandler, IMojangStati
     }
 
     public ServerConnection getServerConnection() {
-        return this.m;
+        return this.m == null ? this.m = new ServerConnection(this) : this.m; // Spigot
     }
 
     public boolean ai() {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 06081dc64..a4200e43e 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -224,4 +224,11 @@ public class SpigotConfig
         }
         bungee = getBoolean( "settings.bungeecord", false );
     }
+
+    private static void nettyThreads()
+    {
+        int count = getInt( "settings.netty-threads", 4 );
+        System.setProperty( "io.netty.eventLoopThreads", Integer.toString( count ) );
+        Bukkit.getLogger().log( Level.INFO, "Using {0} threads for Netty based IO", count );
+    }
 }
-- 
2.17.1

