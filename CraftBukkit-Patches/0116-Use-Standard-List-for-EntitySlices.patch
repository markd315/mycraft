From 36e4a106937308a374f6c30cfe29a9b7b9400705 Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Fri, 20 Feb 2015 21:33:36 +1100
Subject: [PATCH] Use Standard List for EntitySlices.


diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 78bfd9fe9..411ab6061 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -41,7 +41,7 @@ public class Chunk implements IChunkAccess {
     private boolean m;
     private final ChunkConverter n;
     public final Map<BlockPosition, TileEntity> tileEntities;
-    public final EntitySlice<Entity>[] entitySlices;
+    public final List<Entity>[] entitySlices; // Spigot
     private final Map<String, StructureStart> q;
     private final Map<String, LongSet> r;
     private final ShortList[] s;
@@ -102,7 +102,7 @@ public class Chunk implements IChunkAccess {
         this.C = Queues.newConcurrentLinkedQueue();
         this.D = ChunkStatus.EMPTY;
         this.F = new AtomicInteger();
-        this.entitySlices = (EntitySlice[]) (new EntitySlice[16]);
+        this.entitySlices = (List[]) (new List[16]); // Spigot
         this.world = world;
         this.locX = i;
         this.locZ = j;
@@ -119,7 +119,7 @@ public class Chunk implements IChunkAccess {
         }
 
         for (int j1 = 0; j1 < this.entitySlices.length; ++j1) {
-            this.entitySlices[j1] = new EntitySlice(Entity.class);
+            this.entitySlices[j1] = new org.bukkit.craftbukkit.util.UnsafeList(); // Spigot
         }
 
         this.g = abiomebase;
@@ -763,11 +763,11 @@ public class Chunk implements IChunkAccess {
     public void addEntities() {
         this.j = true;
         this.world.b(this.tileEntities.values());
-        EntitySlice[] aentityslice = this.entitySlices;
+        List[] aentityslice = this.entitySlices; // Spigot
         int i = aentityslice.length;
 
         for (int j = 0; j < i; ++j) {
-            EntitySlice entityslice = aentityslice[j];
+            List entityslice = aentityslice[j]; // Spigot
 
             this.world.a((Collection) entityslice);
         }
@@ -796,7 +796,7 @@ public class Chunk implements IChunkAccess {
             this.world.b(tileentity);
         }
 
-        EntitySlice[] aentityslice = this.entitySlices;
+        List[] aentityslice = this.entitySlices; // Spigot
         int i = aentityslice.length;
 
         for (int j = 0; j < i; ++j) {
@@ -883,12 +883,12 @@ public class Chunk implements IChunkAccess {
         j = MathHelper.clamp(j, 0, this.entitySlices.length - 1);
 
         for (int k = i; k <= j; ++k) {
-            Iterator iterator = this.entitySlices[k].c(oclass).iterator();
+            Iterator iterator = this.entitySlices[k].iterator(); // Spigot
 
             while (iterator.hasNext()) {
                 Entity entity = (Entity) iterator.next();
 
-                if (entity.getBoundingBox().c(axisalignedbb) && (predicate == null || predicate.test((T) entity))) { // CraftBukkit - fix decompile error
+                if (oclass.isInstance(entity) && entity.getBoundingBox().c(axisalignedbb) && (predicate == null || predicate.test((T) entity))) { // CraftBukkit - fix decompile error // Spigot - instance check
                     list.add((T) entity); // Fix decompile error
                 }
             }
@@ -1043,7 +1043,7 @@ public class Chunk implements IChunkAccess {
         return this.tileEntities;
     }
 
-    public EntitySlice<Entity>[] getEntitySlices() {
+    public List<Entity>[] getEntitySlices() { // Spigot
         return this.entitySlices;
     }
 
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 635653abc..e60fe5a92 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -1,5 +1,6 @@
 package org.spigotmc;
 
+import java.util.List;
 import java.util.Set;
 import net.minecraft.server.AxisAlignedBB;
 import net.minecraft.server.Chunk;
@@ -142,9 +143,9 @@ public class ActivationRange
      */
     private static void activateChunkEntities(Chunk chunk)
     {
-        for ( EntitySlice slice : chunk.entitySlices )
+        for ( List<Entity> slice : chunk.entitySlices )
         {
-            for ( Entity entity : (Set<Entity>) slice )
+            for ( Entity entity : slice )
             {
                 if ( MinecraftServer.currentTick > entity.activatedTick )
                 {
-- 
2.17.1

